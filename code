import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Read the dataset
df = pd.read_csv('mall_customers.csv')

# Display basic information about the dataset
print(df.info())

# Display the first 10 rows of the dataset
print(df.head(10))

# Check for missing values
print(df.isnull().sum())

# Visualizing histograms and box plots for each numerical feature
hist = df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']]
fig, axes = plt.subplots(3, 2, figsize=(15, 15))

for i, col in enumerate(hist.columns):
    sns.histplot(df[col], ax=axes[i, 0], bins=20, kde=True)
    axes[i, 0].set_title(f'Histogram of {col}')

    sns.boxplot(x=df[col], ax=axes[i, 1])
    axes[i, 1].set_title(f'Box Plot of {col}')

# Selecting features for clustering
features = df[['Annual Income (k$)', 'Spending Score (1-100)']]

# Standardizing the features
scaler = StandardScaler()
features_scaled = scaler.fit_transform(features)

# Number of clusters
k = 5

# KMeans clustering
kmeans = KMeans(n_clusters=k, n_init=10, random_state=42)
df['Cluster'] = kmeans.fit_predict(features_scaled)

# Visualizing the clusters
plt.scatter(features_scaled[:, 0], features_scaled[:, 1], c=df['Cluster'], cmap='viridis')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=200, c='red', marker='.', label='Centroids')
plt.title('K-means Clustering of Customers based on Purchase History')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()
